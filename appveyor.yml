version: 1.0.{build}
environment:
  access_token:
    secure: H8F1UMqC4QixM9NbnHewuineXTu860e3WhkpgMzui6xQmCv2qyXd4BDonVrrW5Iv
  matrix:
  - PYVER: 27
    BITTNESS: 32
  - PYVER: 34
    BITTNESS: 32
  - PYVER: 27
    BITTNESS: 64
  - PYVER: 34
    BITTNESS: 64
build_script:
- ps: >-
    function Check-Error

    {
      param([int]$SuccessVal = 0)
      if ($SuccessVal -ne $LastExitCode) {
        throw "Failed with exit code $LastExitCode"
      }
    }

    cd "$env:APPVEYOR_BUILD_FOLDER"

    $env:PYTHONPATH = "$env:APPVEYOR_BUILD_FOLDER;$env:PYTHONPATH"

    if ($env:BITTNESS -eq "64") {
      $PYTHON_ROOT = "C:\Python$env:PYVER-x64"
    } else {
      $PYTHON_ROOT = "C:\Python$env:PYVER"
    }

    $env:PATH = "$PYTHON_ROOT;$PYTHON_ROOT\Scripts;$env:PATH;C:\Program Files\7-Zip"

    python -c "import sys;print('Python version is {}'.format(sys.version))"

    Check-Error

    python -m pip install --upgrade pip wheel nose setuptools

    Check-Error

    python -m pip install docutils pygments pypiwin32 kivy.deps.sdl2 kivy.deps.glew kivy

    Check-Error

    python -m pip install https://github.com/matham/moa/archive/master.zip https://github.com/matham/cplcom/archive/master.zip

    Check-Error

    python -m pip install -e .

    Check-Error

test_script:
- ps: >-
    function Check-Error

    {
      param([int]$SuccessVal = 0)
      if ($SuccessVal -ne $LastExitCode) {
        throw "Failed with exit code $LastExitCode"
      }
    }

    python -c "from vet_cond.main import ConditioningApp"

    Check-Error

on_success:
- ps: >-
    function Check-Error

    {
      param([int]$SuccessVal = 0)
      if ($SuccessVal -ne $LastExitCode) {
        throw "Failed with exit code $LastExitCode"
      }
    }



    if ($env:BITTNESS -eq "64" -and $env:PYVER -eq "27" -and $env:APPVEYOR_REPO_BRANCH -eq "master" -and -not $env:APPVEYOR_PULL_REQUEST_NUMBER) {
      cd "$env:APPVEYOR_BUILD_FOLDER"
      python -m pip install sphinx
      Check-Error
      cd doc
      ./make.bat html
      Check-Error
      cd ..
      mkdir "C:\docs_temp"
      Copy-Item "doc\build\html\*" "C:\docs_temp" -recurse
      Check-Error

      git config --global credential.helper store
      Add-Content "$env:USERPROFILE\.git-credentials" "https://$($env:access_token):x-oauth-basic@github.com`n"
      git config --global user.email "moiein2000@gmail.com"
      git config --global user.name "Matthew Einhorn"
      Check-Error

      git checkout --orphan gh-pages
      Check-Error
      git rm -rf .
      Remove-Item -recurse * -exclude .git
      Copy-Item "C:\docs_temp\*" .  -recurse
      echo "" > .nojekyll

      git add .
      Check-Error
      git commit -a -m "Docs for git-$env:APPVEYOR_REPO_COMMIT"
      Check-Error
      git push origin gh-pages -f
      Check-Error
    }
