#@PydevCodeAnalysisIgnore
#:import dirname os.path.dirname
#:import join os.path.join
#:import knspace kivy.uix.behaviors.knspace.knspace

<NamedGridLayout@KNSpaceBehavior+GridLayout>
<KNTextInput@KNSpaceBehavior+TextInput>
<StencilRelativeLayout@StencilView+RelativeLayout>

<SpinnerOpt@SpinnerOption>:
    padding_x: '10dp'
    size_hint_x: None
    width: self.texture_size[0]


# the root level widget
<MainView@ScrollView>:
    GridLayout:
        rows: 1
        padding: 20
        GridLayout:
            cols: 1
            size_hint_x: None
            width: self.minimum_width
            padding: [20]
            spacing: 40
            GridLayout:
                rows: 1
                size_hint: None, None
                width: self.minimum_width
                height: '50dp'
                spacing: '10dp'
                ImageButton:
                    size_hint_x: None
                    width: self.height
                    source: 'browse.png' if self.state == 'normal' else 'browse_down.png'
                    disabled: bool(knspace.exp_root) and knspace.exp_root.started and not knspace.exp_root.finished
                    on_release:
                        app.filebrowser.target = dirname(app.json_config_path)
                        app.filebrowser.dirselect = False
                        app.filebrowser.multiselect = False
                        app.filebrowser.callback = app.set_json_file
                        app.filebrowser.open()
                KNToggleButton:
                    knsname: 'gui_start_stop'
                    id: gui_start_stop
                    size_hint_x: None
                    width: self.height
                    background_normal: 'play.png'
                    background_down: 'pause.png'
                    background_disabled_normal: 'play.png'
                    background_disabled_down: 'pause.png'
                    background_color: [.2, .2, .2, 1] if self.disabled else [1, 1, 1, 1]
                    on_release: app.start_stage() if self.state == 'down' else knspace.exp_animal and knspace.exp_animal.stop()
                    disabled:
                        bool(knspace.exp_dev_init) and knspace.exp_dev_init.started and not knspace.exp_dev_init.finished \
                        or bool(knspace.exp_animal)and knspace.exp_animal.finishing and not knspace.exp_animal.finished \
                        or bool(knspace.exp_dev_stop) and knspace.exp_dev_stop.started and not knspace.exp_dev_stop.finished
                KNSpinner:
                    id: gui_trial_type
                    size_hint_x: None
                    width: max(self.maximum_option_width, 75)
                    padding_x: '10dp'
                    option_cls: 'SpinnerOpt'
                    knsname: 'gui_trial_type'
                    disabled: not knspace.exp_animal_wait or not knspace.exp_animal_wait.started or knspace.exp_animal_wait.finished
                    values: sorted(knspace.exp_root.trial_opts.keys()) if knspace.exp_root else ['']
                    text: self.values[0] if self.values else ''
                    sync_height: True
                KNTextInput:
                    knsname: 'gui_animal_id'
                    disabled: gui_trial_type.disabled
                    size_hint_x: None
                    width: '100dp'
                KNButton:
                    knsname: 'next_animal_dev'
                    disabled: gui_trial_type.disabled
                    padding_x: '15dp'
                    size_hint_x: None
                    width: self.texture_size[0]
                    text: 'Go'
                    size_hint_x: None
                    width: '100dp'
                ErrorIndicator:
                    size_hint_x: None
                    width: self.height
                    on_parent: app.error_indicator = self
            TimeLine
                knsname: 'time_line'
            GridLayout:
                size_hint: None, None
                size: self.minimum_size
                rows: 1
                spacing: [10, 0]
                SwitchIcon:
                    knsname: 'gui_shocker'
                    text: 'Shocker'
                    disabled: gui_start_stop.disabled
                    text_height: 30
                SwitchIcon:
                    knsname: 'gui_ir_leds'
                    text: 'IR'
                    disabled: gui_start_stop.disabled
                    text_height: 30
                SwitchIcon:
                    knsname: 'gui_tone'
                    text: 'Tone'
                    disabled: gui_start_stop.disabled
                    text_height: 30
                Widget:
                    size_hint_x: None
                    width: 30
                SwitchIcon:
                    knsname: 'gui_simulate'
                    disabled: bool(knspace.exp_root) and knspace.exp_root.started and not knspace.exp_root.finished
                    text: 'Simulate?'
                    text_height: 30
                    background_down: 'checkbox-checked-gray-th.png'
                    background_normal: 'checkbox-unchecked-gray-th.png'
        BufferImage:
            knsname: 'display'
            do_rotation: False
